openapi: 3.0.3
info:
  title: Api testing
  description: |
    This is a simple API testing to test own API created by the user.
  version: 1.0.11
tags:
  - name: Operations
    description: Everything is working or not
  - name: Dinesh
    description: Operations about user
paths:
  /user:
    get:
      summary: Get all the User
      description: To Retrieve all User
      responses:
        '200':
          description: Successful Retrieve
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id: 
                          type: integer
                        email:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        avatar:
                          type: string
        '500':
          description: Server Error
  /addUser:
    post:
      summary: To Add user 
      description: To Add a new user 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                avatar:
                  type: string
      responses:
        '200':
          description: The User is added successfully
          content:
            application/json:
              example:
                id: 1
                email: saiesh@gmail.com
                first_name: Saiesh
                last_name: Naik
                avatar: https://example.com/avatar.png
        '500':
          description: Server Error
        '400':
          description: Bad Request
          
  /user/{userId}:
    delete:
      summary: To Delete a User
      description: Used to remove the User by using UserId
      parameters:
        - name: userId
          in: path
          description: ID of the user to be deleted
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
        '500':
          description: Server Error
  
    get:
      summary : To Get a selected User
      description: To Retrieve a Selected User
      parameters:
        - name: userId
          in: path
          description: ID of User to be select
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id: 
                          type: integer
                        email:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        avatar:
                          type: string
        '500':
          description: Server Error
        '400':
          description: User not Found
